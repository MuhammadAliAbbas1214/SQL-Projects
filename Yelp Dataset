Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Worksheet


Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
	i. 	Attribute table =		10000
	ii. 	Business table =		10000
	iii. 	Category table =		10000
	iv. 	Checkin table =			10000
	v. 	elite_years table =		10000
	vi. 	friend table = 			10000
	vii. 	hours table =			10000
	viii. 	photo table = 			10000
	ix. 	review table = 			10000
	x. 	tip table = 			10000
	xi. 	user table =			10000
	


2. Find the total number of distinct records for each of the keys listed below:

	i. 	Business =			10000 	(id)
	ii. 	Hours =				1562 	(business_id)
	iii. 	Category =			2643    (business_id)
	iv. 	Attribute =			1115	(business_id)
	v. 	Review =			10000	(id),		8090 (business_id), 	9581 (user_id)
	vi. 	Checkin = 			493 	(business_id)
	vii. 	Photo =				10000	(id),		6493 (business_id)
	viii. 	Tip = 				537	(user_id),      3979 (business_id)
	ix. 	User = 				10000	(id)
	x. 	Friend = 			11	(user_id)
	xi. 	Elite_years =	                2780	(user_id)
	


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
		select id, name, review_count, yelping_since, useful, funny, cool, fans, average_stars, 
			   compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, 
			   compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos
		from  user
		where 	id is null
				or name is null
				or review_count is null
				or yelping_since is null
				or useful is null
				or funny is null
				or cool is null
				or fans is null
				or average_stars is null
				or compliment_hot is null
				or compliment_more is null
				or compliment_profile is null
				or compliment_cute is null
				or compliment_list is null
				or compliment_note is null
				or compliment_plain is null
				or compliment_cool is null
				or compliment_funny is null
				or compliment_writer is null
				or compliment_photos is null
	

	
4. Find the minimum, maximum, and average value for the following fields:

	i. Table: Review, Column: Stars
		min: 1		max: 5		avg: 3.7082
		
	ii. Table: Business, Column: Stars
		min: 1.0	max: 5.0	avg: 3.6549
	
	iii. Table: Tip, Column: Likes
		min: 0		max: 2		avg: 0.0144
	
	iv. Table: Checkin, Column: Count
		min: 1		max: 53		avg: 1.9414
	
	v. Table: User, Column: Review_count
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
		select city, sum(review_count)
		from business
		group by city
		order by sum(review_count) desc
	
	Copy and Paste the Result Below:
		+-----------------+-------------------+
		| city            | sum(review_count) |
		+-----------------+-------------------+
		| Las Vegas       |             82854 |
		| Phoenix         |             34503 |
		| Toronto         |             24113 |
		| Scottsdale      |             20614 |
		| Charlotte       |             12523 |
		| Henderson       |             10871 |
		| Tempe           |             10504 |
		| Pittsburgh      |              9798 |
		| MontrÃ©al       |              9448 |
		| Chandler        |              8112 |
		| Mesa            |              6875 |
		| Gilbert         |              6380 |
		| Cleveland       |              5593 |
		| Madison         |              5265 |
		| Glendale        |              4406 |
		| Mississauga     |              3814 |
		| Edinburgh       |              2792 |
		| Peoria          |              2624 |
		| North Las Vegas |              2438 |
		| Markham         |              2352 |
		| Champaign       |              2029 |
		| Stuttgart       |              1849 |
		| Surprise        |              1520 |
		| Lakewood        |              1465 |
		| Goodyear        |              1155 |
		+-----------------+-------------------+

	
6. Find the distribution of star ratings to the business in the following cities:

	i. Avon
	
		SQL code used to arrive at answer:
			select stars as [Star Rating], count(stars) as [Count]
			from business b
			where city = 'Avon'
			group by stars
		
		Copy and Paste the Resulting Table Below (2 columns - star rating and count):
			+-------------+-------+
			| Star Rating | Count |
			+-------------+-------+
			|         1.5 |     1 |
			|         2.5 |     2 |
			|         3.5 |     3 |
			|         4.0 |     2 |
			|         4.5 |     1 |
			|         5.0 |     1 |
			+-------------+-------+
	
	
	ii. Beachwood

		SQL code used to arrive at answer:
			select stars as [Star Rating], count(stars) as [Count]
			from business b
			where city = 'Beachwood'
			group by stars
		
		Copy and Paste the Resulting Table Below (2 columns - star rating and count):
			+-------------+-------+
			| Star Rating | Count |
			+-------------+-------+
			|         2.0 |     1 |
			|         2.5 |     1 |
			|         3.0 |     2 |
			|         3.5 |     2 |
			|         4.0 |     1 |
			|         4.5 |     2 |
			|         5.0 |     5 |
			+-------------+-------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
		select name, review_count
		from user
		order by review_count desc
		limit 3
		
	Copy and Paste the Result Below:
		+--------+--------------+
		| name   | review_count |
		+--------+--------------+
		| Gerald |         2000 |
		| Sara   |         1629 |
		| Yuri   |         1339 |
		+--------+--------------+


8. Does posing more reviews correlate with more fans?
		- No
		
	Please explain your findings and interpretation of the results:
		- N/A
		
		SQL code:
			select name, review_count, fans
			from user
			order by fans desc
			limit 10
		
		Results:
			+-----------+--------------+------+
			| name      | review_count | fans |
			+-----------+--------------+------+
			| Amy       |          609 |  503 |
			| Mimi      |          968 |  497 |
			| Harald    |         1153 |  311 |
			| Gerald    |         2000 |  253 |
			| Christine |          930 |  173 |
			| Lisa      |          813 |  159 |
			| Cat       |          377 |  133 |
			| William   |         1215 |  126 |
			| Fran      |          862 |  124 |
			| Lissa     |          834 |  120 |
			+-----------+--------------+------+
	
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: more reviews with the word "love"

	
	SQL code used to arrive at answer:
		select (select count(text)
				from review
				where text like "%love%") as  love_text, 

			   (select count(text) 
				from review
				where text like "%hate%") as hate_text
		
		
		Results:
		+-----------+-----------+
		| love_text | hate_text |
		+-----------+-----------+
		|      1780 |       232 |
		+-----------+-----------+
	
	
		OR:
		
		SELECT 'love' Word, COUNT(text) [Total Count]
		FROM review
		WHERE text LIKE '%love%'
		UNION
		SELECT 'hate' Word, COUNT(text) [Total Count]
		FROM review
		WHERE text LIKE '%hate%'
		
		+------+-------------+
		| Word | Total Count |
		+------+-------------+
		| hate |         232 |
		| love |        1780 |
		+------+-------------+
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
		select name, fans
		from user
		order by fans desc
		limit 10
	
	Copy and Paste the Result Below:
		+-----------+------+
		| name      | fans |
		+-----------+------+
		| Amy       |  503 |
		| Mimi      |  497 |
		| Harald    |  311 |
		| Gerald    |  253 |
		| Christine |  173 |
		| Lisa      |  159 |
		| Cat       |  133 |
		| William   |  126 |
		| Fran      |  124 |
		| Lissa     |  120 |
		+-----------+------+
	
	
11. Is there a strong correlation between having a high number of fans and being listed 
	as "useful" or "funny?"
	
	SQL code used to arrive at answer:
		select name, fans, useful, funny
		from user
		order by fans desc, useful desc, funny desc
		limit 20
	
	Copy and Paste the Result Below:
		+-----------+------+--------+--------+
		| name      | fans | useful |  funny |
		+-----------+------+--------+--------+
		| Amy       |  503 |   3226 |   2554 |
		| Mimi      |  497 |    257 |    138 |
		| Harald    |  311 | 122921 | 122419 |
		| Gerald    |  253 |  17524 |   2324 |
		| Christine |  173 |   4834 |   6646 |
		| Lisa      |  159 |     48 |     13 |
		| Cat       |  133 |   1062 |    672 |
		| William   |  126 |   9363 |   9361 |
		| Fran      |  124 |   9851 |   7606 |
		| Lissa     |  120 |    455 |    150 |
		| Mark      |  115 |   4008 |    570 |
		| Tiffany   |  111 |   1366 |    984 |
		| bernice   |  105 |    120 |    112 |
		| Roanna    |  104 |   2995 |   1188 |
		| .Hon      |  101 |   7850 |   5851 |
		| Angela    |  101 |    158 |    164 |
		| Ben       |   96 |   1180 |   1155 |
		| Linda     |   89 |   3177 |   2736 |
		| Christina |   85 |    158 |     34 |
		| Jessica   |   84 |   2161 |   2091 |
		+-----------+------+--------+--------+
	
	Please explain your findings and interpretation of the results:
		- N/A

	
		
Part 2: Inferences and Analysis
1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
i. Do the two groups you chose to analyze have a different distribution of hours?
I choose "Las Vegas" as city and "Shopping" as category.
Yes, but not a huge difference. 2-3 stars has a total of 13 working days and 4-5 stars has 12.
add Codeadd Markdown
 
SELECT  CASE WHEN stars >= 4 THEN "4-5 stars"
             WHEN stars >= 2 THEN "2-3 stars"
             ELSE "below 2"
             END star_rank,
        city, 
        c.category,
        count(distinct business.id) AS company_count,
        count(h.hours) AS working_days
FROM business
JOIN hours h ON business.id = h.business_id
JOIN category c ON business.id = c.business_id
WHERE city = "Las Vegas" AND c.category = "Shopping"
GROUP BY star_rank


+-----------+-----------+----------+---------------+--------------+
| star_rank | city      | category | company_count | working_days |
+-----------+-----------+----------+---------------+--------------+
| 2-3 stars | Las Vegas | Shopping |             2 |           13 |
| 4-5 stars | Las Vegas | Shopping |             2 |           12 |
+-----------+-----------+----------+---------------+--------------+ 
add Codeadd Markdown
ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, the total number of reviews from 4-5 stars is doubled compared to 2-3 stars.
add Codeadd Markdown
 
SELECT  CASE WHEN stars >= 4 THEN "4-5 stars"
             WHEN stars >= 2 THEN "2-3 stars"
             ELSE "below 2"
             END star_rank,
        city, 
        c.category,
        count(distinct business.id) AS company_count,
        sum(review_count) AS total_review
FROM business
JOIN category c ON business.id = c.business_id
WHERE city = "Las Vegas" AND c.category = "Shopping"
GROUP BY star_rank

+-----------+-----------+----------+---------------+--------------+
| star_rank | city      | category | company_count | total_review |
+-----------+-----------+----------+---------------+--------------+
| 2-3 stars | Las Vegas | Shopping |             2 |           17 |
| 4-5 stars | Las Vegas | Shopping |             2 |           36 |
+-----------+-----------+----------+---------------+--------------+
add Codeadd Markdown
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Stores that have 2-3 stars are within the same area, whereas 4-5 stars stores are apart from each other according to the result of postal code.
add Codeadd Markdown
 
SQL code used for analysis:

SELECT  CASE WHEN stars >= 4 THEN "4-5 stars"
             WHEN stars >= 2 THEN "2-3 stars"
             ELSE "below 2"
             END star_rank,
        address,
        neighborhood,
        city, 
        postal_code
FROM business
JOIN category c ON business.id = c.business_id
WHERE city = "Las Vegas" AND c.category = "Shopping"
ORDER BY star_rank


+-----------+-----------------------------+--------------+-------------+
| star_rank | address                     | neighborhood | postal_code |
+-----------+-----------------------------+--------------+-------------+
| 2-3 stars | 3421 E Tropicana Ave, Ste I | Southeast    | 89121       |
| 2-3 stars | 3808 E Tropicana Ave        | Eastside     | 89121       |
| 4-5 stars | 1000 Scenic Loop Dr         |              | 89161       |
| 4-5 stars | 3555 W Reno Ave, Ste F      |              | 89118       |
+-----------+-----------------------------+--------------+-------------+
add Codeadd Markdown
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
i. Difference 1: Total review is significantly higher between still open and closed businesses.
ii. Difference 2: The average stars given are very closed to each other 3.68 vs. 3.52. We can assume that businesses which are closed was not solely due to poor services / poor quality.
SQL code used for analysis:
add Codeadd Markdown

SELECT  CASE    WHEN is_open = 1 THEN "STILL OPEN"
                WHEN is_open = 0 THEN "CLOSED"
                END status, 
        count(distinct id) AS num_company,
        sum(review_count) AS total_review,
        round(avg(review_count),2) AS avg_review,
        round(avg(stars),2) AS avg_stars
FROM business
GROUP BY is_open
ORDER BY status DESC


+------------+-------------+--------------+------------+-----------+
| status     | num_company | total_review | avg_review | avg_stars |
+------------+-------------+--------------+------------+-----------+
| STILL OPEN |        8480 |       269300 |      31.76 |      3.68 |
| CLOSED     |        1520 |        35261 |       23.2 |      3.52 |
+------------+-------------+--------------+------------+-----------+
add Codeadd Markdown
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.
Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
i. Indicate the type of analysis you chose to do:
The analysis is to find out what are the most successful businesses based on the business category.
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
In order to do this analysis, we will need data such as id, stars, and review count from the business table and category from category table. We will need to count the numbers of companies within each category, the average stars given by the consumers to see how they perform, and the total reviews given to see if the data is relevant and ensure it’s not biased.
Lastly, we’re only going to look at categories with at least 10 companies and an average of 3.5+ stars to reduce any irrelevant data.
iii. Output of your finished dataset:
add Codeadd Markdown
 
+------------------------+---------------+-----------+---------------+
| category               | num_companies | avg_stars | total_reviews |
+------------------------+---------------+-----------+---------------+
| Local Services         |            12 |      4.21 |           100 |
| Active Life            |            10 |      4.15 |           131 |
| Health & Medical       |            17 |      4.09 |           203 |
| Home Services          |            16 |       4.0 |            94 |
| Shopping               |            30 |      3.98 |           977 |
| Beauty & Spas          |            13 |      3.88 |           119 |
| American (Traditional) |            11 |      3.82 |          1128 |
| Food                   |            23 |      3.78 |          1781 |
| Bars                   |            17 |       3.5 |          1322 |
+------------------------+---------------+-----------+---------------+
add Codeadd Markdown
Provide the SQL code you used to create your final dataset:
add Codeadd Markdown

SELECT  category, 
        count(distinct id) AS num_companies, 
        round(avg(stars),2) AS avg_stars,
        sum(review_count) total_reviews
FROM business
JOIN category ON business.id = category.business_id
GROUP BY category
HAVING avg_stars >= 3.5 AND num_companies >= 10
ORDER BY avg_stars DESC
add
